// vite.config.ts
import { defineConfig, PluginOption } from 'vite';
import react from '@vitejs/plugin-react';
import { viteSingleFile } from 'vite-plugin-singlefile';
import path from 'node:path';
import fs from 'node:fs';
import * as fflate from 'fflate';

/* eslint-disable */

const MAX_BUNDLE_SIZE = 2 * 1024 * 1024; // só aumente se for inevitável
// const IS_PAGES = process.env.NODE_ENV === 'production';
const IS_PAGES = !!process.env.PAGES; // set PAGES=1 no build do GitHub Pages
const PROXY_TARGET = process.env.VITE_PROXY_TARGET || process.env.PROXY_TARGET;

const GUIDE_FOR_FRONTEND = `
<!--
  This is a single file build of the frontend.
  It is automatically generated by the build process.
  Do not edit this file directly.
  To make changes, refer to the "Web UI" section in the README.
-->
`.trim();

const FRONTEND_PLUGINS = [react()];

function gzipSingleFilePlugin(): PluginOption {
  let config: any;
  return {
    name: 'llamacpp:build',
    apply: 'build',
    async configResolved(_config: any) {
      config = _config;
    },
    writeBundle() {
      const outputIndexHtml = path.join(config.build.outDir, 'index.html');
      let content =
        GUIDE_FOR_FRONTEND + '\n' + fs.readFileSync(outputIndexHtml, 'utf-8');
      content = content.replace(/\r/g, '');
      const compressed = fflate.gzipSync(Buffer.from(content, 'utf-8'), {
        level: 9,
      });

      // normaliza header do gzip (timestamp/OS)
      compressed[0x4] = 0;
      compressed[0x5] = 0;
      compressed[0x6] = 0;
      compressed[0x7] = 0;
      compressed[0x9] = 0;

      if (compressed.byteLength > MAX_BUNDLE_SIZE) {
        throw new Error(
          `Bundle size is too large (${Math.ceil(compressed.byteLength / 1024)} KB).\n` +
            `Please reduce the size of the frontend or increase MAX_BUNDLE_SIZE in vite.config.ts.\n`
        );
      }

      const targetOutputFile = path.join(
        config.build.outDir,
        '../../public/index.html.gz'
      );
      fs.writeFileSync(targetOutputFile, compressed);
    },
  };
}

// Plugins de build:
// - singlefile + react sempre
// - gzip é desativado no GitHub Pages (não serve .gz com Content-Encoding automático)
const BUILD_PLUGINS = [
  react(),
  viteSingleFile(),
  ...(IS_PAGES ? [] : [gzipSingleFilePlugin()]),
];

export default defineConfig({
  // base relativa em produção (GitHub Pages), raiz em dev
  base: '/polaris-v3/',
  plugins: process.env.ANALYZE ? FRONTEND_PLUGINS : BUILD_PLUGINS,
  build: {
    outDir: 'docs',
    emptyOutDir: true,
  },
  server: {
    host: true,
    port: 5173,
    proxy: (() => {
      if (!PROXY_TARGET) return undefined as any;
      const target = PROXY_TARGET;
      return {
        '/v1': {
          target,
          changeOrigin: true,
          secure: false,
        },
        '/props': {
          target,
          changeOrigin: true,
          secure: false,
        },
        '/inference': {
          target,
          changeOrigin: true,
          secure: false,
        },
      } as Record<string, unknown>;
    })(),
  },
});
